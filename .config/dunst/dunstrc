# ███╗   ██╗███████╗██╗  ██╗███╗   ██╗
# ████╗  ██║██╔════╝╚██╗██╔╝████╗  ██║
# ██╔██╗ ██║█████╗   ╚███╔╝ ██╔██╗ ██║
# ██║╚██╗██║██╔══╝   ██╔██╗ ██║╚██╗██║
# ██║ ╚████║███████╗██╔╝ ██╗██║ ╚████║
# ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝
#
# Twitter : https://twitter.com/itsnexn
# Github  : https://github.com/Itsnexn
# Website : Itsnexn.me
# MIT License



# Dunst Documentations: https://dunst-project.org/documentation/

[global]

    # General ========================================================
    monitor = 0
    follow = mouse

    # Show how many messages are currently hidden (because of geometry).
    indicate_hidden = yes

    # Shrink window if it's smaller than the width.
    shrink = no

    transparency = 0 # Range: [0; 100].

    gap_size = 10

    # Padding between text and separator.
    padding = 8
    horizontal_padding = 10

    # Border
    frame_width = 2
    frame_color = "#89B4FA"

    # Sort messages by urgency.
    sort = no

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    idle_threshold = 120

    # Geometry =======================================================
    width = 300
    height = 200
    notification_limit = 6
    origin = top-right
    offset = 4x38

    # Text ===========================================================

    font = JetBrainsMono Nerd Font 10

    # The spacing between lines.  If the height is smaller than the
    # font height, it will get raised to the font height.
    line_height = 0

    # Possible values are:
    # full: Allow a small subset of html markup in notifications:
    #        <b>bold</b>
    #        <i>italic</i>
    #        <s>strikethrough</s>
    #        <u>underline</u>
    #
    #        For a complete reference see
    #        <https://developer.gnome.org/pango/stable/pango-Markup.html>.
    #
    # strip: This setting is provided for compatibility with some broken
    #        clients that send markup even though it's not enabled on the
    #        server. Dunst will try to strip the markup but the parsing is
    #        simplistic so using this option outside of matching rules for
    #        specific applications *IS GREATLY DISCOURAGED*.
    #
    # no:    Disable markup parsing, incoming notifications will be treated as
    #        plain text. Dunst will not advertise that it has the body-markup
    #        capability if this is set as a global setting.
    #
    # It's important to note that markup inside the format option will be parsed
    # regardless of what this is set to.
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "<b>%s</b>\n%b"

    # Alignment of message text.
    # Possible values are "left", "center" and "right".
    alignment = left

    # Vertical alignment of message text and icon.
    # Possible values are "top", "center" and "bottom".
    vertical_alignment = center

    # Show age of message if message is older than show_age_threshold
    # seconds.
    # Set to -1 to disable.
    show_age_threshold = 60

    # Split notifications into multiple lines if they don't fit into
    # geometry.
    word_wrap = yes

    # When word_wrap is set to no, specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = middle

    # Ignore newlines '\n' in notifications.
    ignore_newline = no

    # Stack together notifications with the same content
    stack_duplicates = true

    # Hide the count of stacked notifications with the same content
    hide_duplicate_count = false

    # Display indicators for URLs (U) and actions (A).
    show_indicators = yes

    # Icons ==========================================================

    # Align icons left/right/off
    icon_position = left

    # Scale small icons up to this size, set to 0 to disable. Helpful
    # for e.g. small files or high-dpi screens. In case of conflict,
    # max_icon_size takes precedence over this.
    min_icon_size = 0

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 64

    # Paths to default icons.
    # icon_path = /usr/share/icons/Arc/status/64/

    # History ========================================================

    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = yes

    # Maximum amount of notifications kept in history
    history_length = 20

    # Misc/Advanced ==================================================

    # dmenu path.
    dmenu = rofi -dmenu -p "Dunst: "

    # Browser for opening urls in context menu.
    browser = /usr/bin/xdg-open

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true

    # Define the title of the windows spawned by dunst
    title = Dunst

    # Define the class of the windows spawned by dunst
    class = Dunst

    # Define the corner radius of the notification window
    # in pixel size. If the radius is 0, you have no rounded
    # corners.
    # The radius will be automatically lowered if it exceeds half of the
    # notification height to avoid clipping text and/or icons.
    corner_radius = 0

    # Ignore the dbus closeNotification message.
    # Useful to enforce the timeout set by dunst configuration. Without this
    # parameter, an application may close the notification sent before the
    # user defined timeout.
    ignore_dbusclose = false

    # mouse ==========================================================
    # Defines list of actions for each mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: If the notification has exactly one action, or one is marked as default,
    #              invoke it. If there are multiple and no default, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    # These values can be strung together for each mouse event, and
    # will be executed in sequence.
    mouse_left_click = do_action
    mouse_middle_click = close_current
    mouse_right_click = close_all


    # Shortcuts are specified as [modifier+][modifier+]...key
    # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
    # "mod3" and "mod4" (windows-key).
    # Xev might be helpful to find names for keys.

    # Close notification.
    close = mod1+n

    # Close all notifications.
    close_all = mod1+shift+n

    # Redisplay last message(s).
    history = mod1+grave

    # Context menu.
    context = mod1+ctrl+n

[urgency_low]
    background = "#1E1E2E"
    foreground = "#CDD6F4"
    # Icon for notifications with low urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_normal]
    background = "#1E1E2E"
    foreground = "#CDD6F4"
    timeout = 5
    # Icon for notifications with low urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_critical]
    background = "#1E1E2E"
    foreground = "#CDD6F4"
    frame_color = "#FAB387"2a36"
    # Icon for notifications with low urgency, uncomment to enable
    #icon = /path/to/icon
    timeout = 0

